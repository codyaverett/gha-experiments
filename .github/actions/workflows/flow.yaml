# .github/workflows/trigger-other-actions.yml
name: Trigger Other GitHub Actions

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      target_workflow:
        description: 'Target workflow to trigger'
        required: true
        default: 'deploy.yml'
      target_ref:
        description: 'Git ref (branch/tag) to run on'
        required: false
        default: 'main'
      environment:
        description: 'Environment to deploy to'
        required: false
        default: 'production'

  # Automatic triggers
  push:
    branches: [main]
  pull_request:
    types: [closed]
  deployment_status:
    # Trigger when deployment status changes

jobs:
  trigger-workflow:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Trigger workflow dispatch
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const workflow = '${{ github.event.inputs.target_workflow || 'deploy.yml' }}';
          const ref = '${{ github.event.inputs.target_ref || 'main' }}';
          const environment = '${{ github.event.inputs.environment || 'production' }}';
          
          try {
            const response = await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: workflow,
              ref: ref,
              inputs: {
                environment: environment,
                triggered_by: context.workflow,
                trigger_run_id: context.runId.toString()
              }
            });
            
            console.log('Successfully triggered workflow:', workflow);
            console.log('Response:', response.status);
          } catch (error) {
            console.error('Failed to trigger workflow:', error.message);
            throw error;
          }

  trigger-multiple-workflows:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        workflow: ['test.yml', 'build.yml', 'deploy.yml']
        environment: ['staging', 'production']
    steps:
    - name: Trigger ${{ matrix.workflow }} in ${{ matrix.environment }}
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: '${{ matrix.workflow }}',
            ref: 'main',
            inputs: {
              environment: '${{ matrix.environment }}',
              triggered_by: '${{ github.workflow }}'
            }
          });

  # Cross-repository workflow triggering
  trigger-external-repo:
    runs-on: ubuntu-latest
    steps:
    - name: Trigger workflow in another repository
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.PAT_TOKEN }} # Personal Access Token required
        script: |
          await github.rest.actions.createWorkflowDispatch({
            owner: 'your-org',
            repo: 'target-repo',
            workflow_id: 'deploy.yml',
            ref: 'main',
            inputs: {
              source_repo: context.repo.repo,
              source_run_id: context.runId.toString()
            }
          });

  # Repository dispatch for more complex coordination
  send-repository-dispatch:
    runs-on: ubuntu-latest
    steps:
    - name: Send repository dispatch event
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          await github.rest.repos.createDispatchEvent({
            owner: context.repo.owner,
            repo: context.repo.repo,
            event_type: 'deployment-ready',
            client_payload: {
              environment: 'production',
              version: '${{ github.sha }}',
              triggered_by: context.workflow
            }
          });

---
# Example target workflow that can be triggered
# .github/workflows/deployable-workflow.yml
name: Deployable Workflow

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
      triggered_by:
        description: 'Workflow that triggered this'
        required: false
      trigger_run_id:
        description: 'Run ID of triggering workflow'
        required: false

  repository_dispatch:
    types: [deployment-ready]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || github.event.client_payload.environment }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Display trigger info
      run: |
        echo "Triggered by: ${{ github.event.inputs.triggered_by || 'repository_dispatch' }}"
        echo "Environment: ${{ github.event.inputs.environment || github.event.client_payload.environment }}"
        echo "Trigger Run ID: ${{ github.event.inputs.trigger_run_id }}"

    - name: Deploy
      run: |
        echo "Deploying to ${{ github.event.inputs.environment || github.event.client_payload.environment }}"
        # Your deployment logic here
